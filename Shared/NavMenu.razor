@using BlzApp.Service
@using BlzApp.Models
@inject MenuService MenuService


<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">BlzApp</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    @*<ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="fetch-employee">
                    <span class="oi oi-list-rich" aria-hidden="true"></span>Employee List
                </NavLink>
            </li>

            <li class="nav-item px-3">
                <NavLink class="nav-link" href="fetch-address">
                    <span class="oi oi-list-rich" aria-hidden="true"></span>Address List
                </NavLink>
            </li>
        </ul>*@

    @if (menuList == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <ul class="nav flex-column">
            @foreach (var mn in menuList)
            {
                @if (mn.ParentMenuId == 0)
                { 
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="@mn.PageName" @onclick="()=>GetIsClicked(mn)">
                            <span class="@mn.IconName" aria-hidden="true"></span>@mn.MenuName
                        </NavLink>
                        <ul class="nav flex-column">
                            @foreach (var mn1 in menuList)
                            {
                                @if (mn.MenuId == mn1.ParentMenuId)
                                {
                                    @if (expanSubNav && mn.MenuId == clickMenu) 
                                    { 
                                        <li class="nav-item px-3">
                                            <NavLink class="nav-link" href="@mn1.PageName" @onclick="()=>GetIsClicked(mn1)">
                                                <span class="@mn1.IconName" aria-hidden="true"></span>@mn1.MenuName
                                            </NavLink>
                                        </li>
                                    }
                                }
                            }
                        </ul>
                    </li>
                }
            }
        </ul>
    }

</div>

@code {
    private bool collapseNavMenu = true;
    private bool expanSubNav;
    private int clickMenu = 0;
    private bool hasPageName = true;
    private int prevClickedMenu = 0;

    public IEnumerable<MenuInfo> menuList;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        if (hasPageName)
        {
            collapseNavMenu = !collapseNavMenu;
        }
        //collapseNavMenu = !collapseNavMenu;
    }

    public void GetIsClicked(MenuInfo mn)
    {
        clickMenu = mn.MenuId;
        if (prevClickedMenu != clickMenu)
        {
            expanSubNav = false;
            if (mn.PageName != "" || mn.MenuName == "Home")
            {
                hasPageName = true;
            }
            else
            {
                expanSubNav = !expanSubNav;
                hasPageName = false;
            }
        }
        else
        {
            expanSubNav = !expanSubNav;
        }

        prevClickedMenu = clickMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        menuList = await MenuService.GetMenuData();
    }
}
